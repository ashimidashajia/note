20121011

所有进程的父进程都是init

1
int main(int argc, char **argv)
{
    if (!strcmp(basename(argv[0]), "ueventd")) // ①
        return ueventd_main(argc, argv);
}

根目录下有 ueventd.rc文件，里面是一些设备描述符地址
init.rc中:
service ueventd /sbin/ueventd 而 /sbin/ueventd 是指向 init的一个链接，靠①处区分不同走向。


2

void open_devnull_stdio(void)
{
    int fd;
    static const char *name = "/dev/__null__";
    mknod(name, S_IFCHR | 0600, (1 << 8) | 3); // 1,3是 /dev/null 设备
    fd = open(name, O_RDWR);
    unlink(name);  //删除 /dev/__null__ 文件
	//把stdin stdout stderr 全部duplicate成，以后所有进程（init是所有进程的父进程）向stdio写的内容全部进入“黑洞”
    dup2(fd, 0);   
    dup2(fd, 1);
    dup2(fd, 2);
    close(fd);
}

此函数调用前，可以使用printf(它输出到stdout)，调用后printf无效。init的打印分级别，默认只打印 err 级的。可以在一个宏中调整。


3 与ICS比较，增加了文件mode安全检测，不允许group和other有写权限（flash运行后，root分区挂载成read only 就跟文件mode无关了）
【题外：如果文件有写权限，但是分区是只读的，是什么情况呢】


4  init  property 的原理。以及我找到了 maps 里面显示的  (deleted)  在内核文件里面搜索 "" (deleted)""  在dcache文件里
